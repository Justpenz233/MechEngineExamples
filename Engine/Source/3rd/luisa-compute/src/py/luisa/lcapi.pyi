class float2x2:
    def __init__(self, *args, **kwargs): ...


class float3x3:
    def __init__(self, *args, **kwargs): ...


class float4x4:
    def __init__(self, *args, **kwargs): ...


class int2:
    def __init__(self, *args, **kwargs): ...


class int3:
    def __init__(self, *args, **kwargs): ...


class int4:
    def __init__(self, *args, **kwargs): ...


class uint2:
    def __init__(self, *args, **kwargs): ...


class uint3:
    def __init__(self, *args, **kwargs): ...


class uint4:
    def __init__(self, *args, **kwargs): ...


class float2:
    def __init__(self, *args, **kwargs): ...


class float3:
    def __init__(self, *args, **kwargs): ...


class float4:
    def __init__(self, *args, **kwargs): ...


class bool2:
    def __init__(self, *args, **kwargs): ...


class bool3:
    def __init__(self, *args, **kwargs): ...


class bool4:
    def __init__(self, *args, **kwargs): ...


class Stream:
    def __init__(self, *args, **kwargs): ...

    def synchronize(self, *args, **kwargs): ...

    def add_callback(self, *args, **kwargs): ...

    def add(self, *args, **kwargs): ...


class Sampler:
    def __init__(self, *args, **kwargs): ...


def make_float2x2(*args, **kwargs) -> float2x2: ...


def make_float3x3(*args, **kwargs) -> float3x3: ...


def make_float4x4(*args, **kwargs) -> float4x4: ...


def dispatch_id(*args, **kwargs): ...


def kernel_id(*args, **kwargs): ...


def object_id(*args, **kwargs): ...


def thread_id(*args, **kwargs): ...


def block_id(*args, **kwargs): ...


def make_ray(*args, **kwargs) -> ray: ...


def dispatch_size(*args, **kwargs): ...


def set_block_size(*args, **kwargs): ...


def array(*args, **kwargs): ...


def struct(*args, **kwargs): ...


def make_int2(*args, **kwargs) -> int2: ...


def make_int3(*args, **kwargs) -> int3: ...


def make_int4(*args, **kwargs) -> int4: ...


def make_uint2(*args, **kwargs) -> uint2: ...


def make_uint3(*args, **kwargs) -> uint3: ...


def make_uint4(*args, **kwargs) -> uint4: ...


def make_float2(*args, **kwargs) -> float2: ...


def make_float3(*args, **kwargs) -> float3: ...


def make_float4(*args, **kwargs) -> float4: ...


def make_bool2(*args, **kwargs) -> bool2: ...


def make_bool3(*args, **kwargs) -> bool3: ...


def make_bool4(*args, **kwargs) -> bool4: ...


def log_level_verbose(*args, **kwargs): ...


def log_level_info(*args, **kwargs): ...


def log_level_warning(*args, **kwargs): ...


def log_level_error(*args, **kwargs): ...


def builder() -> FunctionBuilder: ...


def to_bytes(*args, **kwargs): ...


def pixel_storage_channel_count(*args, **kwargs): ...


def pixel_storage_to_format_int(*args, **kwargs): ...


def pixel_storage_to_format_float(*args, **kwargs): ...


def pixel_storage_size(*args, **kwargs): ...


def load_image(*args, **kwargs): ...


class AccelUsageHint:
    FAST_TRACE = ...
    FAST_UPDATE = ...
    FAST_BUILD = ...


class AccelBuildRequest:
    PREFER_UPDATE = ...
    FORCE_BUILD = ...


class PixelFormat:
    R8SInt = ...
    R8UInt = ...
    R8UNorm = ...
    RG8SInt = ...
    RG8UInt = ...
    RG8UNorm = ...
    RGBA8SInt = ...
    RGBA8UInt = ...
    RGBA8UNorm = ...
    R16SInt = ...
    R16UInt = ...
    R16UNorm = ...
    RG16SInt = ...
    RG16UInt = ...
    RG16UNorm = ...
    RGBA16SInt = ...
    RGBA16UInt = ...
    RGBA16UNorm = ...
    R32SInt = ...
    R32UInt = ...
    RG32SInt = ...
    RG32UInt = ...
    RGBA32SInt = ...
    RGBA32UInt = ...
    R16F = ...
    RG16F = ...
    RGBA16F = ...
    R32F = ...
    RG32F = ...
    RGBA32F = ...


class VertexElementFormat:
    XYZW8UNorm = ...
    XY16UNorm = ...
    XYZW16UNorm = ...
    XY16Float = ...
    XYZW16Float = ...
    X32Float = ...
    XY32Float = ...
    XYZ32Float = ...
    XYZW32Float = ...


class VertexAttributeType:
    Position = ...
    Normal = ...
    Tangent = ...
    Color = ...
    UV0 = ...
    UV1 = ...
    UV2 = ...
    UV3 = ...


class Filter:
    POINT = ...,
    LINEAR_POINT = ...,
    LINEAR_LINEAR = ...,
    ANISOTROPIC = ...


class Address:
    EDGE = ...,
    REPEAT = ...,
    MIRROR = ...,
    ZERO = ...
